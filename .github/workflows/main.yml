name: Docker Image CI

on: 
  push:
    branches: [main]

jobs:

# USING GIT PULL.
  test-message/build-container:
    runs-on: ubuntu-latest
    steps:
      # - name: Pull git project
      #   run: git clone https://github.com/GoldenTlmeLover/ezops-test-willians.git

      # - name: Stop all docker containers
      #   run: docker stop $(docker ps -a -q)
      - name: Check out code
        uses: actions/checkout@v3

      - name: Test message
        run: npm run test

      - name: Docker logout
        run: docker logout

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_HUB_LOGIN }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_HUB_LOGIN }}/${{ github.event.head_commit.message }}:${{ github.run_number }}

      - name: Push docker image
        run: docker push ${{ secrets.DOCKER_HUB_LOGIN }}/${{ github.event.head_commit.message }}:${{ github.run_number }}

  run-container-EC2:
    needs: build-container
    runs-on: self-hosted

    steps:
      - name: Stop all docker containers
        run: docker stop $(docker ps -a -q)

      - name: Docker logout
        run: docker logout

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_HUB_LOGIN }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Docker pull
        run: docker pull ${{ secrets.DOCKER_HUB_LOGIN }}/${{ github.event.head_commit.message }}:${{ github.run_number }}

      - name: Docker Run
        run: docker run -d -p 8080:8080 ${{ secrets.DOCKER_HUB_LOGIN }}/${{ github.event.head_commit.message }}:${{ github.run_number }}

  # build-container:
  #   runs-on: ubuntu-latest.
  #   steps:
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: 'willians9620'
  #         password: '@W1ll14ns9620'
        
  #     - name: Build and push Docker images
  #       uses: docker/build-push-action@v3.2.0
  #       with:
  #         context: "{{defaultContext}}:mysubdir"
  #         push: true
  #         tags: user/app:latest
      # - name: create file
      #   run: docker image ls -a
      # - name: Pull git project
      #   run: git pull

      # - name: Stop all docker containers
      #   run: docker stop $(docker ps -a -q)

      # - name: Build docker image
      #   run: docker build . --file Dockerfile --tag teste2:teste2

      # - name: Run docker image
      #   run: docker run -d -p 8080:8080 teste2:teste2